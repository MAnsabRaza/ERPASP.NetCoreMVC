@model ERP.Models.JournalViewModel
@{
    ViewData["Title"] = "Journal Voucher";
    var JournalList = ViewBag.Journal as List<ERP.Models.JournalViewModel>;
}

<div class="space-y-8">
    <!-- Tabs -->
    <div class="border-b border-gray-300 bg-white shadow-sm rounded-xl p-2">
        <nav class="flex space-x-6" aria-label="Tabs">
            <button id="tab-form"
                    class="px-4 py-2 text-sm font-semibold text-blue-600 border-b-2 border-blue-600 focus:outline-none transition"
                    type="button">
                <i class="fa-solid fa-plus-circle mr-2"></i> Journal Entry
            </button>
            <button id="tab-list"
                    class="px-4 py-2 text-sm font-semibold text-gray-500 hover:text-blue-600 hover:border-blue-400 border-b-2 border-transparent focus:outline-none transition"
                    type="button">
                <i class="fa-solid fa-list mr-2"></i> Journal List
            </button>
        </nav>
    </div>

    <!-- Form Tab -->
    <div id="content-form" class="tab-content">
        @using (Html.BeginForm("Create", "Journal", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(j => j.JournalEntry.Id, new { id = "journalId" })

            <!-- hidden field for details -->
            <input type="hidden" id="JournalDetailsJson" name="JournalDetailsJson" value="" />

            <div class="shadow-lg rounded-2xl bg-gradient-to-r from-blue-50 to-blue-100 p-6 border border-gray-200">
                <div class="flex justify-between items-center">
                    <div>
                        <h2 class="text-2xl font-bold text-blue-800 flex items-center gap-2">
                            <i class="fa-solid fas fa-boxes text-blue-600"></i> Journal Voucher
                        </h2>
                        <p class="text-gray-600 mt-1 text-sm">Add and manage journal voucher details</p>
                    </div>

                    <div class="space-x-2">
                        <button type="submit"
                                onclick="beforeSave()"
                                class="px-5 py-2.5 rounded-xl text-sm font-semibold text-white bg-green-600 hover:bg-green-700 shadow-md transition">
                            <i class="fa-solid fa-save mr-2"></i> Save
                        </button>
                        <button type="reset"
                                class="px-5 py-2.5 rounded-xl text-sm font-semibold text-gray-700 bg-yellow-300 hover:bg-yellow-400 shadow-md transition">
                            <i class="fa-solid fa-rotate-right mr-2"></i> Reset
                        </button>
                        <button type="button" onclick="refreshPage()"
                                class="px-5 py-2.5 rounded-xl text-sm font-semibold text-white bg-purple-500 hover:bg-purple-600 shadow-md transition">
                            <i class="fa-solid fa-arrows-rotate mr-2"></i> Refresh
                        </button>
                    </div>
                </div>
            </div>

            <!-- Journal Entry -->
            <div class="shadow-md rounded-2xl bg-white p-6 border border-gray-200 mt-4">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Current Date <sup class="text-red-500 text-lg font-bold ">*</sup> </label>
                        @Html.TextBoxFor(j => j.JournalEntry.current_date, "{0:yyyy-MM-dd}",
                                 new { @class = "w-full mt-1 p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", type = "date", required = "required" })
                    </div>
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Due Date  <sup class="text-red-500 text-lg font-bold ">*</sup></label>
                        @Html.TextBoxFor(j => j.JournalEntry.due_date, "{0:yyyy-MM-dd}",
                                 new { @class = "w-full mt-1 p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", type = "date", required = "required" })
                    </div>
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Posted Date  <sup class="text-red-500 text-lg font-bold ">*</sup></label>
                        @Html.TextBoxFor(j => j.JournalEntry.posted_date, "{0:yyyy-MM-dd}",
                                 new { @class = "w-full mt-1 p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", type = "date", required = "required" })
                    </div>
                </div>
                <div class="grid grid-cols-4 gap-6 mt-3">
                    <div class="col-span-1">
                        <label class="block font-semibold text-gray-700 mb-1">etype Method</label>
                        @Html.DropDownListFor(j => j.JournalEntry.etype,
                                 new List<SelectListItem>
                    {
                    new SelectListItem { Text = "JV", Value = "JV" },
                    new SelectListItem { Text = "Account Payable", Value = "Account Payable" },
                    new SelectListItem { Text = "Account Receiveable", Value = "Account Receiveable" },
                    },
                                 "Select etype Method",
                                 new { @class = "w-full p-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400 focus:outline-none", required = "required" })
                    </div>
                    <div class="col-span-1">
                        <label class="block font-semibold text-gray-700 mb-1">Company</label>
                        @Html.DropDownListFor(m => m.JournalEntry.companyId,
                                 new SelectList(ViewBag.CompanyList, "Id", "company_name"),
                                 "Select Company Name",
                                 new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", required = "required" })
                    </div>
                    <div class="col-span-2">
                        <label class="block font-semibold text-gray-700 mb-1">Description</label>
                        @Html.TextAreaFor(j => j.JournalEntry.description,
                                 new { @class = "w-full p-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400 focus:outline-none", required = "required", placeholder = "Enter Description", rows = "2" })
                    </div>
                </div>
            </div>
            <div class="shadow-md rounded-2xl bg-white p-6 border border-gray-200 mt-4">
                <h3 class="text-lg font-semibold text-gray-700 mb-4">Add Journal Details</h3>

                <div class="grid grid-cols-12 gap-6 items-end">
                    <div class="col-span-3">
                        <label class="block text-sm font-semibold text-gray-700 mb-1">Chart Of Account <sup class="text-red-500 text-lg font-bold ">*</sup></label>
                        <select id="chartOfAccount"
                                class="w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400 focus:outline-none">
                            <option value="">Select Chart of Account</option>
                            @foreach (var account in ViewBag.ChartOfAccount)
                            {
                                <option value="@account.Id">@account.name</option>
                            }
                        </select>
                    </div>
                    <div class="col-span-4">
                        <label class="block text-sm font-semibold text-gray-700 mb-1">Description <sup class="text-red-500 text-lg font-bold ">*</sup></label>
                        <textarea id="description"
                                  class="w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400 focus:outline-none"
                                  placeholder="Enter Description"
                                  rows="3"></textarea>
                    </div>
                    <div class="col-span-2">
                        <label class="block text-sm font-semibold text-gray-700 mb-1">Credit <sup class="text-red-500 text-lg font-bold ">*</sup></label>
                        <input type="number" id="credit"
                               class="w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400 focus:outline-none"
                               placeholder="Enter Credit Amount" step="0.01" />
                    </div>
                    <div class="col-span-2">
                        <label class="block text-sm font-semibold text-gray-700 mb-1">
                            Debit <sup class="text-red-500 text-lg font-bold ">*</sup></label>
                        <input type="number" id="debit"
                               class="w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400 focus:outline-none"
                               placeholder="Enter Debit Amount" step="0.01" />
                    </div>
                    <div class="col-span-1 flex justify-end">
                        <button type="button" id="btnAddDetail"
                                class="px-5 py-2.5 rounded-xl text-sm font-semibold text-white bg-blue-600 hover:bg-blue-700 shadow-md transition
               border border-transparent hover:border-white">
                            Add
                        </button>
                    </div>

                </div>
            </div>
            <div class="overflow-hidden border border-gray-200 rounded-lg mt-6">
                <div class="max-h-96 overflow-y-auto">
                    <table class="table-auto w-full text-sm" id="detailsTable">
                        <thead class="bg-gradient-to-r from-blue-500 to-blue-600 text-white sticky top-0">
                            <tr>
                                <th class="p-3 text-left">S.No</th>
                                <th class="p-3 text-left">Date</th>
                                <th class="p-3 text-left">Chart of Account</th>
                                <th class="p-3 text-left">Description</th>
                                <th class="p-3 text-left">Credit</th>
                                <th class="p-3 text-left">Debit</th>
                                <th class="p-3 text-left">Action</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        }
    </div>

    <div id="content-list" class="tab-content hidden shadow-lg rounded-2xl bg-white p-6 border border-gray-200">
        <div class="flex justify-between items-center">
            <div>
                <h2 class="text-2xl font-bold text-blue-800 flex items-center gap-2">
                    <i class="fa-solid fa-list-ul text-blue-600"></i> Journal List
                </h2>
                <p class="text-gray-600 text-sm mt-1">View and manage all your journal List</p>
            </div>
            <div class="flex items-center space-x-4">
                <div class="px-5 py-2 rounded-xl text-sm font-semibold text-white bg-blue-600 shadow-md">
                    Total Items: @(JournalList?.Count() ?? 0)
                </div>
                <button type="button" id="btn-add-new"
                        class="px-5 py-2 rounded-xl text-sm font-semibold text-white bg-green-600 hover:bg-green-700 shadow-md transition">
                    <i class="fa-solid fa-plus mr-2"></i>Add New
                </button>
            </div>
        </div>

        <!-- Search -->
        <div class="flex justify-between items-center mt-6">
           

        </div>

        <!-- Table -->
        <div class="overflow-hidden border border-gray-200 rounded-lg mt-6">
            <div class="max-h-96 overflow-y-auto">
                <table class="table-auto w-full text-sm">
                    <thead class="bg-gradient-to-r from-blue-500 to-blue-600 text-white sticky top-0">
                        <tr>
                            <th class="p-3 text-left">ID</th>
                            <th class="p-3 text-left">Date</th>
                            <th class="p-3 text-left">etype</th>
                            <th class="p-3 text-left">Description</th>
                            <th class="p-3 text-left">Total Debit</th>
                            <th class="p-3 text-left">Total Credit</th>
                            <th class="p-3 text-left">Action</th>
                        </tr>
                    </thead>
                 

                    <tbody class="divide-y divide-gray-200 bg-white">
                        @if (JournalList != null && JournalList.Any())
                        {
                            foreach (var item in JournalList)
                            {
                                <tr class="hover:bg-gray-50 transition">
                                    <td class="p-3">@item.JournalEntry.Id</td>
                                    <td class="p-3">@item.JournalEntry.current_date</td>
                                    <td class="p-3">@item.JournalEntry.etype</td>
                                    <td class="p-3">@item.JournalEntry.description</td>
                                    <td class="p-3 text-blue-700">@item.JournalEntry.total_debit</td>
                                    <td class="p-3 text-green-700">@item.JournalEntry.total_credit</td>
                                    <td class="p-3 text-center space-x-2">
                                        <a asp-action="Edit" asp-route-id="@item.JournalEntry.Id"
                                           class="px-3 py-1.5 rounded-lg text-xs font-medium bg-blue-100 text-blue-700 hover:bg-blue-200 transition">
                                            <i class="fa-solid fa-pen"></i> Edit
                                        </a>
                                        @using (Html.BeginForm("Delete", "Journal", FormMethod.Post, new { onsubmit = "return confirm('Are you sure?');", @class = "inline" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.Hidden("id", item.JournalEntry.Id)
                                            <button type="submit"
                                                    class="px-3 py-1.5 rounded-lg text-xs font-medium bg-red-100 text-red-700 hover:bg-red-200 transition">
                                                <i class="fa-solid fa-trash"></i> Delete
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="16" class="text-center p-4 text-gray-500">No Journal found.</td>
                            </tr>
                        }
                    </tbody>

                </table>
            </div>
        </div>
    </div>
</div>

<script>

    const tabForm = document.getElementById("tab-form");
    const tabList = document.getElementById("tab-list");
    const contentForm = document.getElementById("content-form");
    const contentList = document.getElementById("content-list");
    const btnAddNew = document.getElementById("btn-add-new");
    const searchInput = document.getElementById("searchInput");
    const clearBtn = document.getElementById("clearSearch");

    function showFormTab() {
        tabForm.classList.add("text-blue-600", "border-blue-600");
        tabForm.classList.remove("text-gray-500", "border-transparent");

        tabList.classList.remove("text-blue-600", "border-blue-600");
        tabList.classList.add("text-gray-500", "border-transparent");

        contentForm.classList.remove("hidden");
        contentList.classList.add("hidden");
    }

    function showListTab() {
        tabList.classList.add("text-blue-600", "border-blue-600");
        tabList.classList.remove("text-gray-500", "border-transparent");

        tabForm.classList.remove("text-blue-600", "border-blue-600");
        tabForm.classList.add("text-gray-500", "border-transparent");

        contentList.classList.remove("hidden");
        contentForm.classList.add("hidden");
    }

    tabForm.addEventListener("click", showFormTab);
    tabList.addEventListener("click", showListTab);

    let details = [];

    // Add detail row
    document.getElementById("btnAddDetail").addEventListener("click", function () {
        const chartOfAccountId = document.getElementById("chartOfAccount").value;
        const chartOfAccountName = document.getElementById("chartOfAccount").selectedOptions[0]?.text;
        const description = document.getElementById('description').value;
        const credit = parseFloat(document.getElementById("credit").value) || 0;
        const debit = parseFloat(document.getElementById("debit").value) || 0;
       
        const currentDate = document.querySelector('input[name="JournalEntry.current_date"]').value;

        if (!chartOfAccountId) {
            alert("Please select a Chart of Account.");
            return;
        }
        if (credit === 0 && debit === 0) {
            alert("Please enter either Credit or Debit amount.");
            return;
        }
        if (credit > 0 && debit > 0) {
            alert("Enter either Credit OR Debit, not both.");
            return;
        }

        const detail = {
            chartOfAccountId: parseInt(chartOfAccountId),
            chartOfAccountName: chartOfAccountName,
            description: description,
            credit_amount: credit,
            debit_amount: debit,
            current_date: currentDate
        };

        details.push(detail);
        renderTable();
        clearInputs();
    });

    function renderTable() {
        const tbody = document.querySelector("#detailsTable tbody");
        tbody.innerHTML = "";

        let totalCredit = 0, totalDebit = 0;

        details.forEach((d, i) => {
            totalCredit += d.credit_amount;
            totalDebit += d.debit_amount;

            tbody.innerHTML += `
                    <tr class="border-b hover:bg-gray-50">
                        <td class="p-3">${i + 1}</td>
                        <td class="p-3">${d.current_date}</td>
                        <td class="p-3">${d.chartOfAccountName}</td>
                            <td class="p-3">${d.description}</td>
                        <td class="p-3">${d.credit_amount.toFixed(2)}</td>
                        <td class="p-3">${d.debit_amount.toFixed(2)}</td>
                        <td class="p-3">
                                <button type="button"
                                         onclick="removeDetail(${i})" class="text-red-600 
                                         hover:text-red-800 px-2 py-1 rounded transition
                                         title="Delete">
                                        <i class="fa-solid fa-trash"></i>
                                </button>
                        </td>
                    </tr>
                `;
        });

        if (details.length > 0) {
            tbody.innerHTML += `
                    <tr class="bg-gray-100 font-semibold">
                        <td colspan="4" class="p-3">Total</td>
                        <td class="p-3 text-green-700">${totalCredit.toFixed(2)}</td>
                                    <td class="p-3 text-blue-700">${totalDebit.toFixed(2)}</td>
                        <td></td>
                    </tr>`;
        }

        document.getElementById("JournalDetailsJson").value = JSON.stringify(details);
    }

    function removeDetail(index) {
        details.splice(index, 1);
        renderTable();
    }

    function clearInputs() {
        document.getElementById("chartOfAccount").value = "";
        document.getElementById("credit").value = "";
        document.getElementById("description").value = "";
        document.getElementById("debit").value = "";
    }

    function beforeSave() {
        document.getElementById("JournalDetailsJson").value = JSON.stringify(details);
    }
</script>
