@model ERP.Models.Item
@{
    ViewData["Title"] = "Item";
    var itemList = ViewBag.Item as List<ERP.Models.Item>;
    int totalItems = ViewBag.TotalItems;
    int page = ViewBag.Page;
    int pageSize = ViewBag.PageSize;
    string searchString = ViewBag.SearchString ?? "";
    int totalPages = (int)Math.Ceiling((double)totalItems / pageSize);
}

<div class="space-y-8">

    <!-- Tabs -->
    <div class="border-b border-gray-300 bg-white shadow-sm rounded-xl p-2">
        <nav class="flex space-x-6" aria-label="Tabs">
            <button id="tab-form"
                    class="px-4 py-2 text-sm font-semibold text-blue-900 border-b-2 border-blue-900 focus:outline-none transition"
                    type="button">
                <i class="fa-solid fa-plus-circle mr-2"></i> Item Entry
            </button>
            <button id="tab-list"
                    class="px-4 py-2 text-sm font-semibold text-gray-500 hover:text-blue-900 hover:border-blue-400 border-b-2 border-transparent focus:outline-none transition"
                    type="button">
                <i class="fa-solid fa-list mr-2"></i> Item List
            </button>
        </nav>
    </div>

    <!-- Form Tab -->
    <div id="content-form" class="tab-content">
        @using (Html.BeginForm("Create", "Item", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id, new { id = "itemId" })

            <!-- Header Card -->
            <div class="shadow-lg rounded-2xl bg-gradient-to-r from-blue-50 to-blue-100 p-6 border border-gray-200">
                <div class="flex justify-between items-center">
                    <div>
                        <h2 class="text-2xl font-bold text-blue-800 flex items-center gap-2">
                            <i class="fa-solid fas fa-boxes text-blue-900"></i> Item Management
                        </h2>
                        <p class="text-gray-600 mt-1 text-sm">Add and manage your inventory items efficiently</p>
                    </div>

                    <div class="space-x-2">
                        <button type="submit"
                                class="px-5 py-2.5 rounded-xl text-sm font-semibold text-white bg-green-600 hover:bg-green-700 shadow-md transition">
                            <i class="fa-solid fa-save mr-2"></i> Save
                        </button>
                        <button type="reset"
                                class="px-5 py-2.5 rounded-xl text-sm font-semibold text-gray-700 bg-yellow-300 hover:bg-yellow-400 shadow-md transition">
                            <i class="fa-solid fa-rotate-right mr-2"></i> Reset
                        </button>
                        <button type="button" onclick="refreshPage()"
                                class="px-5 py-2.5 rounded-xl text-sm font-semibold text-white bg-purple-500 hover:bg-purple-600 shadow-md transition">
                            <i class="fa-solid fa-arrows-rotate mr-2"></i> Refresh
                        </button>
                    </div>
                </div>
            </div>

            <!-- Section 1 -->
            <div class="shadow-md rounded-2xl bg-white p-6 border border-gray-200 mt-4">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Current Date</label>
                        @Html.TextBoxFor(m => m.current_date, "{0:yyyy-MM-dd}",
                                 new { @class = "w-full mt-1 p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", type = "date", required = "required" })
                    </div>
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Remark</label>
                        @Html.TextBoxFor(m => m.remark,
                                 new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", type = "text", required = "required", placeholder = "Enter Remark" })
                    </div>
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Status</label>
                        <div class="flex items-center space-x-2 mt-1">
                            @Html.CheckBoxFor(m => m.status, new { @class = "w-5 h-5 text-blue-900 rounded focus:ring-blue-500" })
                            <span class="text-gray-600">Active</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Section 2 -->
            <div class="shadow-md rounded-2xl bg-white p-6 border border-gray-200 mt-4">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Item Barcode</label>
                        @Html.TextBoxFor(m => m.item_barcode,
                                 new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", type = "text", required = "required", placeholder = "Enter barcode" })
                    </div>
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Item Name</label>
                        @Html.TextBoxFor(m => m.item_name,
                                 new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", type = "text", required = "required", placeholder = "Enter item name" })
                    </div>
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Description</label>
                        @Html.TextAreaFor(m => m.description,
                                 new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", required = "required", placeholder = "Enter Description" })
                    </div>
                </div>
            </div>

            <!-- Section 3 -->
            <div class="shadow-md rounded-2xl bg-white p-6 border border-gray-200 mt-4">
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Brand</label>
                        @Html.DropDownListFor(m => m.brandId,
                            new SelectList(ViewBag.brandList, "Id", "brand_name"),
                            "Select Brand",
                            new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", required = "required" })
                    </div>
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Category</label>
                        @Html.DropDownListFor(m => m.categoryId,
                            new SelectList(ViewBag.categoryList, "Id", "category_name"),
                            "Select Category",
                            new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", required = "required" })
                    </div>
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Sub Category</label>
                        @Html.DropDownListFor(m => m.subCategoryId,
                            new SelectList(ViewBag.subCategoryList, "Id", "sub_category_name"),
                            "Select Sub Category",
                            new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", required = "required" })
                    </div>
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">UOM</label>
                        @Html.DropDownListFor(m => m.uomId,
                            new SelectList(ViewBag.uomList, "Id", "uom_name"),
                            "Select UOM",
                            new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", required = "required" })
                    </div>
                </div>
            </div>

            <!-- Section 4 -->
            <div class="shadow-md rounded-2xl bg-white p-6 border border-gray-200 mt-4">
                <div class="grid grid-cols-1 md:grid-cols-6 gap-6">
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Quantity</label>
                        @Html.TextBoxFor(m => m.qty,
                                 new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", type = "number", required = "required", placeholder = "Enter Quantity" })
                    </div>
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Purchase Rate</label>
                        @Html.TextBoxFor(m => m.purchase_rate,
                                 new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", type = "number", required = "required", placeholder = "Enter Purchase Rate" })
                    </div>
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Sales Rate</label>
                        @Html.TextBoxFor(m => m.sale_rate,
                                 new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", type = "number", required = "required", placeholder = "Enter Sales Rate" })
                    </div>
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Rate</label>
                        @Html.TextBoxFor(m => m.rate,
                                 new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", type = "number", required = "required", placeholder = "Enter Rate" })
                    </div>
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Discount</label>
                        @Html.TextBoxFor(m => m.discount_amount,
                                 new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", type = "number", required = "required", placeholder = "Enter Discount" })
                    </div>
                    <div>
                        <label class="block font-semibold text-gray-700 mb-1">Total Amount</label>
                        @Html.TextBoxFor(m => m.total_amount,
                                 new { @class = "w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400", type = "number", required = "required", placeholder = "Total Amount" })
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- List Tab -->
    <div id="content-list" class="tab-content hidden shadow-lg rounded-2xl bg-white p-6 border border-gray-200">
        <div class="flex justify-between items-center">
            <div>
                <h2 class="text-2xl font-bold text-blue-800 flex items-center gap-2">
                    <i class="fa-solid fa-list-ul text-blue-900"></i> Items Inventory
                </h2>
                <p class="text-gray-600 text-sm mt-1">View and manage all your items</p>
            </div>
            <div class="flex items-center space-x-4">
                <div class="px-5 py-2 rounded-xl text-sm font-semibold text-white bg-blue-900 shadow-md">
                    Total Items: @(itemList?.Count() ?? 0)
                </div>
                <button type="button" id="btn-add-new"
                        class="px-5 py-2 rounded-xl text-sm font-semibold text-white bg-green-600 hover:bg-green-700 shadow-md transition">
                    <i class="fa-solid fa-plus mr-2"></i>Add New
                </button>
            </div>
        </div>

        <!-- Search -->
        <div class="flex justify-between items-center mt-6">
            <div></div>
            <form method="get" asp-action="Item" class="flex items-center space-x-2 w-full max-w-md">
                <input type="hidden" name="activeTab" value="list" />
                <div class="relative w-full">
                    <input type="text" id="searchInput" name="searchString" value="@searchString"
                           placeholder="Search Item..."
                           class="w-full px-4 py-2 pr-10 border rounded-lg focus:ring focus:ring-blue-300" />
                    <button type="button" id="clearSearch"
                            class="absolute inset-y-0 right-2 flex items-center text-gray-400 hover:text-red-500 hidden">
                        <i class="fa-solid fa-xmark"></i>
                    </button>
                </div>
                <button type="submit"
                        class="px-4 py-2 bg-blue-900 text-white rounded-lg hover:bg-blue-800">
                    <i class="fa fa-search"></i>
                </button>
            </form>
            
        </div>

        <!-- Table -->
        <div class="overflow-hidden border border-gray-200 rounded-lg mt-6">
            <div class="max-h-96 overflow-y-auto">
                <table class="table-auto w-full text-sm">
                    <thead class="bg-gradient-to-r from-blue-800 to-blue-900 text-white sticky top-0">
                        <tr>
                            <th class="p-3 text-left">ID</th>
                            <th class="p-3 text-left">Date</th>
                            <th class="p-3 text-left">Barcode</th>
                            <th class="p-3 text-left">Name</th>
                            <th class="p-3 text-left">Status</th>
                            <th class="p-3 text-left">Category</th>
                            <th class="p-3 text-left">Sub Category</th>
                            <th class="p-3 text-left">Brand</th>
                            <th class="p-3 text-left">Qty</th>
                            <th class="p-3 text-left">Rate</th>
                            <th class="p-3 text-left">Purchase Rate</th>
                            <th class="p-3 text-left">Sales Rate</th>
                            <th class="p-3 text-left">Discount</th>
                            <th class="p-3 text-left">Total</th>
                            <th class="p-3 text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200 bg-white">
                        @if (itemList != null && itemList.Any())
                        {
                            foreach (var item in itemList)
                            {
                                <tr class="hover:bg-gray-50 transition">
                                    <td class="p-3">@item.Id</td>
                                    <td class="p-3">@item.current_date</td>
                                    <td class="p-3">@item.item_barcode</td>
                                    <td class="p-3 font-medium">@item.item_name</td>
                                    <td class="p-3">
                                        @if (item.status)
                                        {
                                            <span class="px-3 py-1 text-xs font-medium text-green-700 bg-green-100 rounded-full">Active</span>
                                        }
                                        else
                                        {
                                            <span class="px-3 py-1 text-xs font-medium text-red-700 bg-red-100 rounded-full">Inactive</span>
                                        }
                                    </td>
                                    <td class="p-3">@item.Category.category_name</td>
                                    <td class="p-3">@item.SubCategory.sub_category_name</td>
                                    <td class="p-3">@item.Brand.brand_name</td>
                                    <td class="p-3">@item.qty @item.UOM.uom_name</td>
                                    <td class="p-3">@item.rate</td>
                                    <td class="p-3">@item.purchase_rate</td>
                                    <td class="p-3">@item.sale_rate</td>
                                    <td class="p-3">@item.discount_amount</td>
                                    <td class="p-3">@item.total_amount</td>
                                    <td class="p-3 text-center space-x-2">
                                        <a asp-action="Edit" asp-route-id="@item.Id"
                                           class="px-3 py-1.5 rounded-lg text-xs font-medium bg-blue-100 text-blue-700 hover:bg-blue-200 transition">
                                            <i class="fa-solid fa-pen"></i> Edit
                                        </a>
                                        @using (Html.BeginForm("Delete", "Item", FormMethod.Post, new { onsubmit = "return confirm('Are you sure?');", @class = "inline" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.Hidden("id", item.Id)
                                            <button type="submit"
                                                    class="px-3 py-1.5 rounded-lg text-xs font-medium bg-red-100 text-red-700 hover:bg-red-200 transition">
                                                <i class="fa-solid fa-trash"></i> Delete
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="16" class="text-center p-4 text-gray-500">No items found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pagination -->
        <div class="flex justify-between items-center mt-4">
            <span class="text-sm text-gray-600">Page @(page) of @totalPages</span>
            <div class="space-x-2">
                @if (page > 1)
                {
                    <a asp-action="Item" asp-route-page="@(page-1)" asp-route-searchString="@searchString" asp-route-activeTab="list"
                       class="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300">Prev</a>
                }
                @if (page < totalPages)
                {
                    <a asp-action="Item" asp-route-page="@(page+1)" asp-route-searchString="@searchString" asp-route-activeTab="list"
                       class="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300">Next</a>
                }
            </div>
        </div>
    </div>
    </div>
</div>

<!-- Tabs + helpers -->
<script>
    const tabForm = document.getElementById("tab-form");
    const tabList = document.getElementById("tab-list");
    const contentForm = document.getElementById("content-form");
    const contentList = document.getElementById("content-list");
    const btnAddNew = document.getElementById("btn-add-new");
    const searchInput = document.getElementById("searchInput");
    const clearBtn = document.getElementById("clearSearch");

    function showFormTab() {
        tabForm.classList.add("text-blue-900", "border-blue-900");
        tabForm.classList.remove("text-gray-500", "border-transparent");

        tabList.classList.remove("text-blue-900", "border-blue-900");
        tabList.classList.add("text-gray-500", "border-transparent");

        contentForm.classList.remove("hidden");
        contentList.classList.add("hidden");
    }

    function showListTab() {
        tabList.classList.add("text-blue-900", "border-blue-900");
        tabList.classList.remove("text-gray-500", "border-transparent");

        tabForm.classList.remove("text-blue-900", "border-blue-900");
        tabForm.classList.add("text-gray-500", "border-transparent");

        contentList.classList.remove("hidden");
        contentForm.classList.add("hidden");
    }

    tabForm.addEventListener("click", showFormTab);
    tabList.addEventListener("click", showListTab);
    if (btnAddNew) btnAddNew.addEventListener("click", showFormTab);

    // Refresh button → always go to Form tab
    function refreshPage() {
        window.location.href = '@Url.Action("Item", "Item")?activeTab=form';
    }

    // Search clear → reload but keep list tab
    searchInput.addEventListener("input", () => {
        clearBtn.style.display = searchInput.value ? "flex" : "none";
    });
    clearBtn.addEventListener("click", () => {
        window.location.href = '@Url.Action("Item", "Item")?activeTab=list';
    });
    if (searchInput.value) {
        clearBtn.style.display = "flex";
    }

    // Check query string for active tab
    const params = new URLSearchParams(window.location.search);
    const activeTab = params.get("activeTab");
    if (activeTab === "list") {
        showListTab();
    } else {
        showFormTab(); // default
    }
</script>

